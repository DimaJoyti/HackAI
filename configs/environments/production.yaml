# LLM Security Proxy - Production Environment Configuration
# Optimized for security, performance, and reliability in production

# Server Configuration - Production hardened
server:
  port: 8080
  host: "0.0.0.0"
  read_timeout: "30s"
  write_timeout: "30s"
  idle_timeout: "60s"
  shutdown_timeout: "30s"
  tls_enabled: true
  cert_file: "/etc/ssl/certs/production.crt"
  key_file: "/etc/ssl/private/production.key"
  cors:
    enabled: true
    allowed_origins: ["https://hackai.dev", "https://dashboard.hackai.dev", "https://api.hackai.dev"]
    allowed_methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
    allowed_headers: ["Content-Type", "Authorization", "X-Provider", "X-Model", "X-Request-ID"]
    max_age: 3600
  rate_limit:
    enabled: true
    requests_per_minute: 1000
    burst_size: 100

# Database Configuration - Production database cluster
database:
  host: "${DB_HOST}"
  port: "${DB_PORT}"
  name: "hackai_production"
  user: "${DB_USER}"
  password: "${DB_PASSWORD}"
  ssl_mode: "require"
  max_open_conns: 50
  max_idle_conns: 10
  conn_max_lifetime: "5m"
  conn_max_idle_time: "1m"
  migration_path: "./migrations"
  auto_migrate: false  # Manual migrations in production

# Redis Configuration - Production Redis cluster
redis:
  host: "${REDIS_HOST}"
  port: "${REDIS_PORT}"
  password: "${REDIS_PASSWORD}"
  db: 0
  pool_size: 25
  min_idle_conns: 10
  dial_timeout: "5s"
  read_timeout: "3s"
  write_timeout: "3s"
  pool_timeout: "4s"
  idle_timeout: "5m"

# JWT Configuration - Production secrets
jwt:
  secret: "${JWT_SECRET}"
  issuer: "hackai-production"
  audience: "hackai-users"
  access_token_duration: "15m"
  refresh_token_duration: "24h"
  algorithm: "HS256"

# Security Configuration - Maximum security for production
security:
  enabled: true
  strict_mode: true  # Strict security enforcement
  default_threat_score: 0.0
  block_high_threat_score: true
  threat_score_threshold: 0.7  # Lower threshold for production
  
  policy_engine:
    enabled: true
    default_action: "deny"  # Deny by default in production
    evaluation_timeout: "3s"  # Shorter timeout
    cache_enabled: true
    cache_ttl: "10m"
    max_policy_size: "1MB"
    
  content_filter:
    enabled: true
    max_content_length: 50000  # Smaller limit for production
    scan_timeout: "5s"
    block_malicious_content: true
    block_pii: true
    block_toxic_content: true
    toxicity_threshold: 0.6  # Lower threshold
    
  rate_limiter:
    enabled: true
    strict_mode: true
    global_requests_per_minute: 10000
    global_requests_per_hour: 100000
    global_tokens_per_minute: 1000000
    global_tokens_per_hour: 10000000
    user_requests_per_minute: 60
    user_requests_per_hour: 1000
    user_requests_per_day: 10000
    user_tokens_per_minute: 10000
    user_tokens_per_hour: 100000
    user_tokens_per_day: 1000000
    user_cost_per_hour: 100.0
    user_cost_per_day: 500.0
    user_cost_per_month: 2000.0
    allow_burst: false  # No burst in production
    burst_multiplier: 1.0
    burst_window_seconds: 60

# Audit Configuration - Comprehensive production auditing
audit:
  enabled: true
  
  logger:
    enabled: true
    batch_size: 100
    flush_interval: "30s"
    max_queue_size: 10000
    include_request_body: false  # Don't log request bodies in production
    include_response_body: false  # Don't log response bodies in production
    mask_sensitive_data: true
    compress_large_payloads: true
    max_payload_size: "1MB"
    retention_days: 90
    
  middleware:
    enabled: true
    log_successful_requests: false  # Only log important events
    log_failed_requests: true
    log_blocked_requests: true
    log_security_violations: true
    log_policy_decisions: true
    excluded_endpoints: ["/health", "/metrics", "/ready"]
    excluded_providers: []
    min_threat_score_to_log: 0.3  # Only log higher threat scores
    sample_rate: 0.1  # Sample 10% of requests
    
  service:
    enabled: true
    retention_period: "90d"
    cleanup_interval: "24h"
    archive_old_logs: true
    archive_threshold: "30d"
    enable_metrics: true
    metrics_update_interval: "5m"
    enable_alerts: true

# Observability Configuration - Production monitoring
observability:
  logging:
    level: "warn"  # Only warnings and errors
    format: "json"
    output: "stdout"
    file_path: ""
    add_source: false  # Don't include source in production
    time_format: "RFC3339"
    
  metrics:
    enabled: true
    port: 9090
    path: "/metrics"
    namespace: "hackai"
    subsystem: "llm_security_proxy"
    
  tracing:
    enabled: true
    service_name: "llm-security-proxy"
    endpoint: "${JAEGER_ENDPOINT}"
    sample_rate: 0.01  # Sample 1% of requests
    insecure: false
    headers:
      authorization: "${JAEGER_AUTH_TOKEN}"

# AI Provider Configuration - Production API keys and strict limits
ai:
  providers:
    openai:
      enabled: true
      api_key: "${OPENAI_API_KEY}"
      base_url: "https://api.openai.com/v1"
      timeout: "30s"
      max_retries: 3
      models:
        - "gpt-3.5-turbo"
        - "gpt-4"
        - "gpt-4-turbo"
    anthropic:
      enabled: true
      api_key: "${ANTHROPIC_API_KEY}"
      base_url: "https://api.anthropic.com"
      timeout: "30s"
      max_retries: 3
      models:
        - "claude-3-sonnet"
        - "claude-3-opus"
    azure:
      enabled: true
      api_key: "${AZURE_OPENAI_API_KEY}"
      endpoint: "${AZURE_OPENAI_ENDPOINT}"
      api_version: "2023-12-01-preview"
      timeout: "30s"
      max_retries: 3
      
  defaults:
    max_tokens: 4096
    temperature: 0.7
    top_p: 1.0
    frequency_penalty: 0.0
    presence_penalty: 0.0
    timeout: "30s"
    
  cost_tracking:
    enabled: true
    currency: "USD"
    alert_threshold: 1000.0
    daily_limit: 5000.0
    monthly_limit: 50000.0

# Feature Flags - Conservative production settings
features:
  enable_real_time_dashboard: true
  enable_policy_testing: false  # Disable testing in production
  enable_threat_simulation: false  # Disable simulation in production
  enable_advanced_analytics: true
  enable_export_functionality: true
  enable_webhook_notifications: true
  enable_slack_integration: true
  enable_email_alerts: true

# Notification Configuration - Production alerts
notifications:
  email:
    enabled: true
    smtp_host: "${SMTP_HOST}"
    smtp_port: 587
    username: "${SMTP_USERNAME}"
    password: "${SMTP_PASSWORD}"
    from_address: "alerts@hackai.dev"
    tls_enabled: true
    
  slack:
    enabled: true
    webhook_url: "${SLACK_WEBHOOK_URL}"
    channel: "#production-alerts"
    username: "HackAI Security Bot"
    
  webhook:
    enabled: true
    url: "${WEBHOOK_URL}"
    timeout: "10s"
    retry_attempts: 3
    headers:
      authorization: "${WEBHOOK_AUTH_TOKEN}"

# Debug Configuration - Disabled for production
debug:
  enabled: false
  pprof_enabled: false
  pprof_port: 6060
  verbose_logging: false
  log_sql_queries: false
  disable_auth: false
  mock_providers: false

# Production-specific settings
production:
  enable_high_availability: true
  enable_auto_scaling: true
  enable_circuit_breakers: true
  enable_bulkhead_isolation: true
  data_retention_days: 90
  backup_frequency: "1h"
  health_check_interval: "10s"
  
# High Availability Configuration
high_availability:
  enable_clustering: true
  cluster_size: 3
  enable_load_balancing: true
  enable_failover: true
  failover_timeout: "30s"
  
# Auto Scaling Configuration
auto_scaling:
  min_instances: 2
  max_instances: 10
  target_cpu_utilization: 70
  target_memory_utilization: 80
  scale_up_cooldown: "5m"
  scale_down_cooldown: "10m"
  
# Circuit Breaker Configuration
circuit_breaker:
  failure_threshold: 5
  recovery_timeout: "60s"
  timeout: "30s"
  max_requests: 100
  
# Security Hardening
security_hardening:
  enable_request_signing: true
  enable_ip_whitelisting: false
  enable_geo_blocking: false
  enable_ddos_protection: true
  enable_waf: true
  
# Compliance Configuration
compliance:
  enable_gdpr_compliance: true
  enable_hipaa_compliance: false
  enable_sox_compliance: false
  data_classification: "confidential"
  encryption_at_rest: true
  encryption_in_transit: true
