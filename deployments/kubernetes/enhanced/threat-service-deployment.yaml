apiVersion: apps/v1
kind: Deployment
metadata:
  name: threat-service
  namespace: hackai
  labels:
    app: threat-service
    component: backend
    tier: service
    version: v1
  annotations:
    deployment.kubernetes.io/revision: "1"
    kubernetes.io/change-cause: "Initial deployment"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: threat-service
      version: v1
  template:
    metadata:
      labels:
        app: threat-service
        component: backend
        tier: service
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
        sidecar.istio.io/inject: "true"
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    spec:
      serviceAccountName: threat-service-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
        seccompProfile:
          type: RuntimeDefault
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - threat-service
              topologyKey: kubernetes.io/hostname
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: node-type
                operator: In
                values:
                - general
                - compute
      tolerations:
      - key: "workload"
        operator: "Equal"
        value: "ai-training"
        effect: "NoSchedule"
      containers:
      - name: threat-service
        image: ghcr.io/hackai/threat-service:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        - name: health
          containerPort: 8081
          protocol: TCP
        env:
        - name: PORT
          value: "8080"
        - name: METRICS_PORT
          value: "9090"
        - name: HEALTH_PORT
          value: "8081"
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: hackai-config
              key: ENVIRONMENT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: hackai-config
              key: LOG_LEVEL
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: hackai-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: hackai-config
              key: DB_PORT
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: hackai-config
              key: DB_NAME
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: hackai-secrets
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: hackai-secrets
              key: DB_PASSWORD
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: hackai-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: hackai-config
              key: REDIS_PORT
        - name: THREAT_INTEL_API_KEY
          valueFrom:
            secretKeyRef:
              name: hackai-secrets
              key: THREAT_INTEL_API_KEY
        - name: VIRUSTOTAL_API_KEY
          valueFrom:
            secretKeyRef:
              name: hackai-secrets
              key: VIRUSTOTAL_API_KEY
        - name: MITRE_API_KEY
          valueFrom:
            secretKeyRef:
              name: hackai-secrets
              key: MITRE_API_KEY
        - name: NVD_API_KEY
          valueFrom:
            secretKeyRef:
              name: hackai-secrets
              key: NVD_API_KEY
        - name: JAEGER_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: hackai-config
              key: JAEGER_ENDPOINT
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
            ephemeral-storage: "2Gi"
          limits:
            memory: "2Gi"
            cpu: "1000m"
            ephemeral-storage: "4Gi"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        livenessProbe:
          httpGet:
            path: /health/live
            port: health
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: health
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health/startup
            port: health
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 30
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /app/cache
        - name: threat-data
          mountPath: /app/data
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: secrets
          mountPath: /app/secrets
          readOnly: true
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - sleep 15
      volumes:
      - name: tmp
        emptyDir:
          sizeLimit: 100Mi
      - name: cache
        emptyDir:
          sizeLimit: 1Gi
      - name: threat-data
        persistentVolumeClaim:
          claimName: threat-data-pvc
      - name: config
        configMap:
          name: hackai-config
          defaultMode: 0444
      - name: secrets
        secret:
          secretName: hackai-secrets
          defaultMode: 0400
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      imagePullSecrets:
      - name: ghcr-secret

---
apiVersion: v1
kind: Service
metadata:
  name: threat-service
  namespace: hackai
  labels:
    app: threat-service
    component: backend
    tier: service
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: metrics
    protocol: TCP
  selector:
    app: threat-service
  sessionAffinity: None

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: threat-service-sa
  namespace: hackai
  labels:
    app: threat-service
    component: backend
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT:role/threat-service-role
automountServiceAccountToken: true

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: threat-data-pvc
  namespace: hackai
  labels:
    app: threat-service
    component: storage
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: fast-ssd

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: threat-service-hpa
  namespace: hackai
  labels:
    app: threat-service
    component: backend
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: threat-service
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 75
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: threat-service-pdb
  namespace: hackai
  labels:
    app: threat-service
    component: backend
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: threat-service

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: threat-intel-update
  namespace: hackai
  labels:
    app: threat-service
    component: cronjob
spec:
  schedule: "0 2 * * *"  # Daily at 2 AM
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: threat-intel-update
            component: cronjob
        spec:
          serviceAccountName: threat-service-sa
          securityContext:
            runAsNonRoot: true
            runAsUser: 65534
            runAsGroup: 65534
            fsGroup: 65534
          containers:
          - name: threat-intel-update
            image: ghcr.io/hackai/threat-service:latest
            imagePullPolicy: Always
            command:
            - /app/service
            - update-threat-intel
            env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: hackai-config
                  key: DB_HOST
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: hackai-config
                  key: DB_PORT
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: hackai-config
                  key: DB_NAME
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: hackai-secrets
                  key: DB_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: hackai-secrets
                  key: DB_PASSWORD
            - name: THREAT_INTEL_API_KEY
              valueFrom:
                secretKeyRef:
                  name: hackai-secrets
                  key: THREAT_INTEL_API_KEY
            resources:
              requests:
                memory: "256Mi"
                cpu: "100m"
              limits:
                memory: "512Mi"
                cpu: "500m"
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                - ALL
            volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: threat-data
              mountPath: /app/data
          volumes:
          - name: tmp
            emptyDir:
              sizeLimit: 100Mi
          - name: threat-data
            persistentVolumeClaim:
              claimName: threat-data-pvc
          restartPolicy: OnFailure
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1
